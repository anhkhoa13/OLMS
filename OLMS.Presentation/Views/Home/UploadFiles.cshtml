@{
    ViewData["Title"] = "Manage Course Files";
}

<div class="container mt-5">
    <!-- Title -->
    <h2 class="text-center mb-4">📂 Upload Your Course Files</h2>

    <!-- Upload Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <button class="btn btn-outline-primary d-flex align-items-center" onclick="document.getElementById('fileInput').click();">
            <i class="bi bi-upload"></i>&nbsp; Upload Files
        </button>
        <input type="file" id="fileInput" multiple class="d-none" onchange="previewFiles(this.files)">
    </div>

    <!-- Drag & Drop Zone -->
    <div id="dropZone" class="border p-4 rounded bg-light text-center">
        <p class="text-muted">Drag and drop files here to upload.</p>
    </div>

    <!-- Preview File Before Upload -->
    <div id="previewList" class="mt-3"></div>
    <button id="confirmUploadBtn" class="btn btn-success mt-2 d-none" onclick="uploadFiles()">Confirm Upload</button>

    <!-- File List -->
    <div id="fileListContainer" class="border p-4 rounded bg-light mt-4">
        <p class="text-muted text-center" id="noFilesText">No files uploaded yet.</p>
        <div id="fileList"></div>
    </div>

<!-- JavaScript -->
<script>
document.addEventListener("DOMContentLoaded", function () {
    loadFiles();
    setupDragDrop();
});

let selectedFiles = [];

// Cấu hình drag & drop
function setupDragDrop() {
    const dropZone = document.getElementById("dropZone");

    dropZone.addEventListener("dragover", function (e) {
        e.preventDefault();
        dropZone.classList.add("border-primary");
    });

    dropZone.addEventListener("dragleave", function () {
        dropZone.classList.remove("border-primary");
    });

    dropZone.addEventListener("drop", function (e) {
        e.preventDefault();
        dropZone.classList.remove("border-primary");
        addFiles(e.dataTransfer.files);
    });
}

function addFiles(files) {
    for (let file of files) {
        selectedFiles.push(file);
    }
    updatePreview();
}

function previewFiles(files) {
    addFiles(files);
}

function removeFile(index) {
    selectedFiles.splice(index, 1);
    updatePreview();
}

function updatePreview() {
    const previewList = document.getElementById("previewList");
    const fileListContainer = document.getElementById("fileListContainer");
    const noFilesText = document.getElementById("noFilesText");

    previewList.innerHTML = "";

    if (selectedFiles.length > 0) {
        document.getElementById("confirmUploadBtn").classList.remove("d-none");
        fileListContainer.classList.add("d-none"); // Ẩn luôn khung chứa danh sách file

        selectedFiles.forEach((file, index) => {
            previewList.innerHTML += `
                <div class="d-flex justify-content-between align-items-center bg-white p-2 mb-2 rounded shadow-sm">
                    <span>${file.name} (${(file.size / 1024).toFixed(2)} KB)</span>
                    <button class="btn btn-sm btn-outline-danger" onclick="removeFile(${index})">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
            `;
        });
    } else {
        document.getElementById("confirmUploadBtn").classList.add("d-none");
        fileListContainer.classList.remove("d-none"); // Hiện lại khung chứa khi không có file
    }
}

function uploadFiles() {
    const formData = new FormData();
    for (let file of selectedFiles) {
        formData.append("files", file);
    }

    fetch('/File/Upload', { method: "POST", body: formData })
        .then(response => response.json())
        .then(() => {
            document.getElementById("confirmUploadBtn").classList.add("d-none");
            document.getElementById("previewList").innerHTML = "";
            selectedFiles = []; // Xóa danh sách file đã chọn
            loadFiles();
        });
}

function loadFiles() {
    fetch('/File/GetFiles')
        .then(response => response.json())
        .then(files => {
            const fileListContainer = document.getElementById("fileListContainer");
            const fileList = document.getElementById("fileList");
            fileList.innerHTML = "";

            if (files.length === 0) {
                fileListContainer.classList.remove("d-none"); // Hiện lại khung nếu không có file
            } else {
                fileListContainer.classList.remove("d-none");
                files.forEach((file, index) => {
                    fileList.innerHTML += `
                        <div class="d-flex justify-content-between align-items-center bg-white p-3 mb-2 rounded shadow-sm">
                            <span class="fw-medium">${file}</span>
                            <div>
                                <button class="btn btn-sm btn-outline-success me-2" onclick="renameFile(${index}, '${file}')">
                                    <i class="bi bi-pencil"></i> Rename
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="deleteFile('${file}')">
                                    <i class="bi bi-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                    `;
                });
            }
        });
}

// Rename File
function renameFile(index, oldName) {
    const newName = prompt("Enter new name:", oldName);
    if (newName && newName !== oldName) {
        fetch('/File/Rename', {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ oldName, newName })
        }).then(() => loadFiles());
    }
}

// Delete File
function deleteFile(fileName) {
    if (confirm("Are you sure you want to delete this file?")) {
        fetch('/File/Delete', {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ fileName })
        }).then(() => loadFiles());
    }
}
</script>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
