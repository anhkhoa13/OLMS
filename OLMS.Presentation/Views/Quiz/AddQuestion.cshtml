@model OLMS.Application.Features.QuizUC.DTO.QuestionDto

<div class="container">
    <h2>Add Question</h2>

    <div class="form-group mb-4">
        <label for="quizSelect" class="form-label">Select Quiz:</label>
        <select id="quizSelect" class="form-control">
            <option value="">-- Select a Quiz --</option>
        </select>
    </div>

    <div id="questionForm" style="display: none;">
        <form id="addQuestionForm">
            <input type="hidden" id="selectedQuizId" name="QuizId" />

            <div class="form-group mb-3">
                <label for="Content">Question Content</label>
                <textarea class="form-control" id="Content" name="Content" required></textarea>
            </div>

            <div class="form-group mb-3">
                <label for="Type">Question Type</label>
                <select class="form-control" id="Type" name="Type" required>
                    <option value="MultipleChoice">Multiple Choice</option>
                    <option value="ShortAnswer">Short Answer</option>
                </select>
            </div>

            <div id="multipleChoiceOptions" class="mb-3">
                <h5>Options</h5>
                <div id="optionsContainer">
                    <div class="form-group mb-2">
                        <input type="text" class="form-control option-input" placeholder="Option 1">
                    </div>
                </div>
                <button type="button" id="addOptionBtn" class="btn btn-sm btn-secondary mt-2">Add Option</button>

                <div class="form-group mt-3">
                    <label for="CorrectOptionIndex">Correct Option Number</label>
                    <input type="number" class="form-control" id="CorrectOptionIndex" name="CorrectOptionIndex" min="1">
                </div>
            </div>

            <div id="shortAnswerOption" class="mb-3" style="display: none;">
                <div class="form-group">
                    <label for="CorrectAnswer">Correct Answer</label>
                    <input type="text" class="form-control" id="CorrectAnswer" name="CorrectAnswer">
                </div>
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">Save Question</button>
                <button type="button" id="resetBtn" class="btn btn-secondary">Reset</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const quizSelect = document.getElementById('quizSelect');
            const questionForm = document.getElementById('questionForm');
            const selectedQuizId = document.getElementById('selectedQuizId');
            const typeSelect = document.getElementById('Type');
            const multipleChoiceOptions = document.getElementById('multipleChoiceOptions');
            const shortAnswerOption = document.getElementById('shortAnswerOption');
            const addOptionBtn = document.getElementById('addOptionBtn');
            const optionsContainer = document.getElementById('optionsContainer');
            const resetBtn = document.getElementById('resetBtn');
            const addQuestionForm = document.getElementById('addQuestionForm');

            // Fetch quizzes from the API
            fetch('https://localhost:7212/api/quiz/list')
                .then(response => {
                    console.log(response)
                    if (!response.ok) {
                        throw new Error('Failed to fetch quizzes');
                    }
                    return response.json();
                })
                .then(quizzes => {
                    // Populate the dropdown with quizzes
                    quizzes.forEach(quiz => {
                        const option = document.createElement('option');
                        option.value = quiz.quizId;
                        option.textContent = quiz.title;
                        quizSelect.appendChild(option);
                    });
                })
                .catch(error => {
                    console.error('Error fetching quizzes:', error);
                    alert('Failed to load quizzes. Please try again later.');
                });

            // Show/hide question form based on quiz selection
            quizSelect.addEventListener('change', function() {
                if (this.value) {
                    selectedQuizId.value = this.value;
                    questionForm.style.display = 'block';
                } else {
                    questionForm.style.display = 'none';
                }
            });

            // Toggle question type options
            typeSelect.addEventListener('change', function() {
                if (this.value === 'MultipleChoice') {
                    multipleChoiceOptions.style.display = 'block';
                    shortAnswerOption.style.display = 'none';
                } else {
                    multipleChoiceOptions.style.display = 'none';
                    shortAnswerOption.style.display = 'block';
                }
            });

            // Add new option field
            let optionCount = 1;
            addOptionBtn.addEventListener('click', function() {
                optionCount++;
                const newOption = document.createElement('div');
                newOption.className = 'form-group mb-2';
                newOption.innerHTML = `<input type="text" class="form-control option-input" placeholder="Option ${optionCount}">`;
                optionsContainer.appendChild(newOption);
            });

            // Reset form
            resetBtn.addEventListener('click', function() {
                addQuestionForm.reset();
                optionsContainer.innerHTML = '<div class="form-group mb-2"><input type="text" class="form-control option-input" placeholder="Option 1"></div>';
                optionCount = 1;
            });

            // Handle form submission
            addQuestionForm.addEventListener('submit', function(e) {
                e.preventDefault();

                const content = document.getElementById('Content').value.trim();
                const type = typeSelect.value;
                const quizId = selectedQuizId.value;

                if (!content) {
                    alert('Please enter question content');
                    return;
                }

                const questionData = {
                    Content: content,
                    Type: type,
                    QuizId: quizId
                };

                if (type === 'MultipleChoice') {
                    const optionInputs = document.querySelectorAll('.option-input');
                    const options = Array.from(optionInputs).map(input => input.value.trim());

                    if (options.some(opt => !opt)) {
                        alert('Please fill in all options');
                        return;
                    }

                    const correctOptionIndex = parseInt(document.getElementById('CorrectOptionIndex').value) - 1;
                    if (isNaN(correctOptionIndex) || correctOptionIndex < 0 || correctOptionIndex >= options.length) {
                        alert('Please enter a valid correct option number');
                        return;
                    }

                    questionData.Options = options;
                    questionData.CorrectOptionIndex = correctOptionIndex;
                } else {
                    const correctAnswer = document.getElementById('CorrectAnswer').value.trim();
                    if (!correctAnswer) {
                        alert('Please enter the correct answer');
                        return;
                    }
                    questionData.CorrectAnswer = correctAnswer;
                }

                // Send the data to the server
                fetch('/api/quiz/add-questions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        QuizId: quizId,
                        Questions: [questionData]
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    alert('Question saved successfully!');
                    addQuestionForm.reset();
                    optionsContainer.innerHTML = '<div class="form-group mb-2"><input type="text" class="form-control option-input" placeholder="Option 1"></div>';
                    optionCount = 1;
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Failed to save question');
                });
            });
        });
    </script>
}
