

@{
    ViewData["Title"] = "Create Quiz";
}

<h2>Create a New Quiz</h2>

<form id="quizForm" onsubmit="submitQuiz(event)">
    <h2>Create a Quiz</h2>

    <label for="quiz-title">Quiz Title:</label>
    <input type="text" id="quiz-title" placeholder="Quiz Title" required />

    <label for="quiz-description">Description:</label>
    <textarea id="quiz-description" placeholder="Enter quiz description"></textarea>

    <label for="quiz-startTime">Start Time:</label>
    <input type="datetime-local" id="quiz-startTime" required />

    <label for="quiz-endTime">End Time:</label>
    <input type="datetime-local" id="quiz-endTime" required />

    <label for="quiz-isTimeLimited">Is Time Limited?</label>
    <input type="checkbox" id="quiz-isTimeLimited" />

    @* <button type="button" onclick="addQuestion()">+ Add Question</button> *@

    <div id="questions-container"></div>

    <button type="submit">Submit Quiz</button>
</form>

<script>

     async function submitQuiz(event) {
         event.preventDefault(); // Prevent default form submission behavior

         const quizTitle = document.getElementById("quiz-title").value;
         const quizDescription = document.getElementById("quiz-description").value;
         const startTime = document.getElementById("quiz-startTime").value;
         const endTime = document.getElementById("quiz-endTime").value;
         const isTimeLimited = document.getElementById("quiz-isTimeLimited").checked;

         if (!quizTitle || questions.length === 0) {
             alert("Please add a quiz title and at least one question.");
             return;
         }

         const payload = {
             title: quizTitle,
             description: quizDescription, // Adjust based on UI
             startTime: new Date(startTime).toISOString(),
             endTime: new Date(endTime).toISOString(),
             isTimeLimited: isTimeLimited,
         };

         try {
             const response = await fetch("/CreateQuiz", { // Match the controller route
                 method: "POST",
                 headers: { "Content-Type": "application/json" },
                 body: JSON.stringify(payload)
             });

             if (!response.ok) {
                 throw new Error("Quiz creation failed.");
             }

             const result = await response.json();
             alert(`Quiz Created! ID: ${result.quizId}`);
         } catch (error) {
             alert("Error: " + error.message);
         }
     }
</script>

