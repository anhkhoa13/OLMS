@{
    var errors = new List<string>();
    if (!ViewData.ModelState.IsValid)
    {
        errors = ViewData.ModelState.Values.SelectMany(v => v.Errors)
                                           .Select(e => e.ErrorMessage)
                                           .ToList();
    }
}

@if (errors.Any())
{
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="errorModalLabel">Lỗi nhập liệu</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <ul class="mb-0 ps-3">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let errorModalElement = document.getElementById("errorModal");
            let errorModal = new bootstrap.Modal(errorModalElement, { backdrop: "static", keyboard: false });

            // Xóa các modal backdrop cũ nếu có
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());

            // Hiển thị modal
            errorModal.show();

            // Xử lý sự kiện khi modal đóng
            errorModalElement.addEventListener("hidden.bs.modal", function () {
                errorModalElement.removeAttribute("aria-hidden");
                errorModalElement.style.display = "none";
            });
        });
    </script>
}
